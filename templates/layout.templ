package templates

import (
    "github.com/skywall34/trip-tracker/internal/middleware"
)

templ header(title string) {
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>{ title }</title>

        <!-- PWA Meta Tags -->
        <meta name="application-name" content="Mia's Trips"/>
        <meta name="apple-mobile-web-app-capable" content="yes"/>
        <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"/>
        <meta name="apple-mobile-web-app-title" content="Mia's Trips"/>
        <meta name="description" content="Track your adventures like a pro producer"/>
        <meta name="theme-color" content="#10b981"/>

        <!-- Icons -->
        <link rel="manifest" href="/manifest.json"/>
        <link rel="icon" type="image/png" sizes="32x32" href="/static/icons/favicon-32x32.png"/>
        <link rel="apple-touch-icon" href="/static/icons/apple-touch-icon.png"/>

        <!-- Core JS -->
        <script src="/static/js/htmx.min.js"         nonce={ middleware.GetHtmxNonce(ctx) }></script>
        <script nonce={ middleware.GetHtmxNonce(ctx) }>
            // Configure HTMX to work with CSP - disable eval
            htmx.config.allowEval = false;
        </script>
        <script src="/static/js/response-targets.js" nonce={ middleware.GetResponseTargetsNonce(ctx) }></script>
        <script src="/static/js/modal.js"            nonce={ middleware.GetModalNonce(ctx) }></script>
        <script src="/static/js/tabs.js"             nonce={ middleware.GetTabsJSNonce(ctx) }></script>
        <script src="/static/js/convertTimes.js"     nonce={ middleware.GetConvertTSNonce(ctx) }></script>
        <script src="/static/js/pwa-features.js"     nonce={ middleware.GetPWANonce(ctx) }></script>
        
        <!-- Map stack -->
        <link rel="stylesheet" href="/static/css/leaflet.css">
        <script src="/static/js/leaflet.js"          nonce={ middleware.GetLeafletNonce(ctx) }></script>
        <script src="/static/js/map.js"              nonce={ middleware.GetMapJSNonce(ctx) }></script>

        <!-- THREE import map + module -->
        <script type="importmap" nonce={ middleware.GetThreeJSNonce(ctx) }>
        {
            "imports": {
            "three": "https://cdn.jsdelivr.net/npm/three@0.176.0/build/three.module.js",
            "three/addons/": "https://cdn.jsdelivr.net/npm/three@0.176.0/examples/jsm/"
            }
        }
        </script>
        <script type="module" src="/static/js/worldmap3d.js" nonce={ middleware.GetMap3DJSNonce(ctx) }></script>

        <!-- Tailwind output -->
        <link rel="stylesheet" href="/static/css/output.css">

        <!-- Mobile CSS -->
        <link rel="stylesheet" href="/static/css/mobile.css">

        <!-- PWA Installation Script -->
        <script nonce={ middleware.GetPWANonce(ctx) }>
          if ('serviceWorker' in navigator) {
            window.addEventListener('load', () => {
              navigator.serviceWorker.register('/sw.js')
                .then(registration => console.log('SW registered'))
                .catch(error => console.log('SW registration failed'));
            });
          }

          // PWA Install Prompt
          let deferredPrompt;
          window.addEventListener('beforeinstallprompt', (e) => {
            e.preventDefault();
            deferredPrompt = e;
            showInstallButton();
          });

          function showInstallButton() {
            const installBtn = document.createElement('button');
            installBtn.innerHTML = 'üì± Install App';
            installBtn.className = 'fixed bottom-4 right-4 bg-emerald-600 text-white px-4 py-2 rounded-lg shadow-lg hover:bg-emerald-700 z-50';
            installBtn.onclick = installApp;
            document.body.appendChild(installBtn);
          }

          function installApp() {
            if (deferredPrompt) {
              deferredPrompt.prompt();
              deferredPrompt.userChoice.then((choiceResult) => {
                deferredPrompt = null;
              });
            }
          }
        </script>

        <!-- Google Fonts -->
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=JetBrains+Mono:wght@400;600&display=swap" rel="stylesheet">
    </head>
}

templ mobileNav() {
    <nav class="mobile-nav md:hidden">
        <a href="/" class="mobile-nav-item">
            <div class="mobile-nav-icon">üè†</div>
            <span>Home</span>
        </a>
        <a href="/statistics" class="mobile-nav-item">
            <div class="mobile-nav-icon">üìä</div>
            <span>Stats</span>
        </a>
        <a href="/worldmap" class="mobile-nav-item">
            <div class="mobile-nav-icon">üó∫Ô∏è</div>
            <span>Map</span>
        </a>
    </nav>
}

templ footer() {
    <footer class="py-12 text-center text-xs text-slate-500/80 border-t border-white/5">
        <p>Built with ‚ù§Ô∏è for travelers ‚Äî ¬© 2025 Mia's Trips</p>
    </footer>
}

templ nav() {
    <header class="sticky top-0 z-40 backdrop-blur supports-[backdrop-filter]:bg-ink-900/70 border-b border-white/5">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 h-16 flex items-center justify-between">
            <div class="flex items-center gap-3">
                <div class="h-6 w-6 rounded-full led"></div>
                <a href="/" class="font-semibold tracking-tight text-white">Mia‚Äôs Trips</a>
                <span class="hidden sm:inline-block text-xs font-mono px-2 py-1 rounded bg-white/5 border border-white/10 ml-2">Beta</span>
            </div>
            <nav class="hidden md:flex items-center gap-6 text-sm">
                <a class="hover:text-white" href="/">Home</a>
                <a class="hover:text-white" href="/statistics">Statistics</a>
                <a class="hover:text-white" href="/worldmap">World Map</a>
                <a class="hover:text-white" href="/places">Places</a>
            </nav>

            if middleware.GetUserUsingContext(ctx) >= 0 {
                <a hx-post="/logout" hx-trigger="click" hx-target="body" hx-swap="outerHTML" class="text-xs font-medium px-3 py-1.5 rounded-md border border-white/10 hover:border-white/20 hover:bg-white/5 transition">
                    Logout
                </a>
            } else {
                <a href="/login" class="text-xs font-medium px-3 py-1.5 rounded-md border border-white/10 hover:border-white/20 hover:bg-white/5 transition">
                    Login or Create Account
                </a>
            }
        </div>
    </header>
}

templ Layout(contents templ.Component, title string) {
    <!DOCTYPE html>
    <html lang="en" class="dark">
    @header(title)
    <body class="bg-ink-900 bg-mesh bg-no-repeat text-slate-300 min-h-screen relative font-sans">
        @nav()
        <div class="main-content">
            @contents
        </div>
        @mobileNav()
        @footer()
    </body>
    </html>
}
